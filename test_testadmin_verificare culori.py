# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestadmin1():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testadmin1(self):
    # Test name: testadmin1
    # Step # | name | target | value
    # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e")
    # 2 | setWindowSize | 1936x1056 | 
    self.driver.set_window_size(1936, 1056)
    # 3 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 4 | type | id=email | maricaandrei60@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("maricaandrei60@gmail.com")
    # 5 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 6 | click | id=submit_login | 
    self.driver.find_element(By.ID, "submit_login").click()
    # 7 | mouseOver | id=submit_login | 
    element = self.driver.find_element(By.ID, "submit_login")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | click | css=#subtab-AdminCatalog span |
    self.driver.implicitly_wait(3)
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminCatalog span").click()
    # 9 | click | linkText=Attributes & Features |
    self.driver.find_element(By.LINK_TEXT, "Attributes & Features").click()
    # 10 | click | css=#tr_2_2_1 .dropdown-toggle | 
    self.driver.find_element(By.CSS_SELECTOR, "#tr_2_2_1 .dropdown-toggle").click()
    # 11 | click | css=.open > .btn:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".open > .btn:nth-child(1)").click()
    time.sleep(3)
    assert "Grey" and "Blue" and "Pink" in self.driver.page_source
  
