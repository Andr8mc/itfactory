# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestaddbrand():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testaddbrand(self):
    # Test name: testaddbrand
    # Step # | name | target | value
    # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=958fb60fa7caa6709f45c58954e32439 | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=958fb60fa7caa6709f45c58954e32439")
    # 2 | setWindowSize | 1920x1040 | 
    self.driver.set_window_size(1920, 1040)
    # 3 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 4 | type | id=email | maricaandrei60@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("maricaandrei60@gmail.com")
    # 5 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 6 | click | id=submit_login | 
    self.driver.find_element(By.ID, "submit_login").click()
    # 7 | mouseOver | id=submit_login | 
    element = self.driver.find_element(By.ID, "submit_login")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | click | css=#subtab-AdminCatalog > .link |
    self.driver.implicitly_wait(3)
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminCatalog > .link").click()
    # 9 | click | linkText=Brands & Suppliers | 
    self.driver.find_element(By.LINK_TEXT, "Brands & Suppliers").click()
    # 10 | click | id=page-header-desc-configuration-add_manufacturer | 
    self.driver.find_element(By.ID, "page-header-desc-configuration-add_manufacturer").click()
    # 11 | click | id=manufacturer_name | 
    self.driver.find_element(By.ID, "manufacturer_name").click()
    # 12 | runScript | window.scrollTo(0,100) | 
    self.driver.execute_script("window.scrollTo(0,100)")
    # 13 | type | id=manufacturer_name | Tommy Hilfinger
    self.driver.find_element(By.ID, "manufacturer_name").send_keys("Tommy Hilfinger")
    # 16 | mouseDown | css=.btn-primary:nth-child(2) |
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).click_and_hold().perform()
    # 18 | click | css=.lang-en |
    self.driver.find_element(By.CSS_SELECTOR, ".lang-en").click()
    # 19 | click | linkText=Brands & Suppliers | 
    self.driver.find_element(By.LINK_TEXT, "Brands & Suppliers").click()
    # 20 | mouseOver | css=tr:nth-child(6) .btn-group > .tooltip-link | 
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) .btn-group > .tooltip-link")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    time.sleep(3)
    # 10 | click | css=tr:nth-child(9) > .column-name |
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(9) > .column-name").click()
    clasa = self.driver.find_element(By.CLASS_NAME, "container-fluid")
    text = clasa.find_element(By.CLASS_NAME, "title-row")
    nume = text.find_element(By.CLASS_NAME, "title")
    titlu = nume.get_attribute("innerText")
    assert "Tommy Hilfinger" in titlu



  
