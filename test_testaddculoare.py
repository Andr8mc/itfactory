# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestaddculoare():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testaddculoare(self):
    # Test name: testaddculoare
    # Step # | name | target | value
    # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=958fb60fa7caa6709f45c58954e32439 | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=958fb60fa7caa6709f45c58954e32439")
    # 2 | setWindowSize | 1920x1040 | 
    self.driver.set_window_size(1920, 1040)
    # 3 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 4 | type | id=email | maricaandrei60@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("maricaandrei60@gmail.com")
    # 5 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 6 | click | id=submit_login | 
    self.driver.find_element(By.ID, "submit_login").click()
    # 7 | mouseOver | id=submit_login | 
    element = self.driver.find_element(By.ID, "submit_login")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | mouseOver | linkText=Active Shopping Carts |
    self.driver.implicitly_wait(3)
    element = self.driver.find_element(By.LINK_TEXT, "Active Shopping Carts")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).perform()
    # 9 | mouseOut | linkText=Active Shopping Carts | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).perform()
    # 10 | mouseOver | css=#subtab-AdminParentCustomerThreads > .link | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminParentCustomerThreads > .link")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | mouseOut | css=#subtab-AdminParentCustomerThreads > .link | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).perform()
    # 12 | mouseOver | css=#subtab-AdminParentCustomer > .link | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminParentCustomer > .link")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | mouseOut | css=#subtab-AdminParentCustomer > .link | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).perform()
    # 14 | click | css=#subtab-AdminCatalog > .link | 
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminCatalog > .link").click()
    # 15 | click | linkText=Attributes & Features | 
    self.driver.find_element(By.LINK_TEXT, "Attributes & Features").click()
    # 16 | click | id=subtab-AdminFeatures | 
    self.driver.find_element(By.ID, "subtab-AdminFeatures").click()
    # 17 | click | css=#page-header-desc-feature-new_feature_value > div | 
    self.driver.find_element(By.CSS_SELECTOR, "#page-header-desc-feature-new_feature_value > div").click()
    # 18 | click | id=id_feature | 
    self.driver.find_element(By.ID, "id_feature").click()
    # 19 | select | id=id_feature | label=colour
    dropdown = self.driver.find_element(By.ID, "id_feature")
    dropdown.find_element(By.XPATH, "//option[. = 'colour']").click()
    # 20 | click | id=value_1 | 
    self.driver.find_element(By.ID, "value_1").click()
    # 21 | type | id=value_1 | turqoise
    self.driver.find_element(By.ID, "value_1").send_keys("turqoise")
    # 22 | click | id=feature_value_form_submit_btn | 
    self.driver.find_element(By.ID, "feature_value_form_submit_btn").click()
    self.driver.find_element(By.ID, "subtab-AdminFeatures").click()
    self.driver.find_element(By.CSS_SELECTOR, "#tr_2_3_2 .btn:nth-child(1)").click()
    table = self.driver.find_element(By.ID, "table-feature_value")
    cells = table.find_elements(By.CLASS_NAME, "column-value")
    texts = [c.get_attribute("innerText") for c in cells]
    # element = self.driver.find_element(By.XPATH, "/html/body/div[1]/div/div[6]/div/form[2]/div/div[2]/table/tbody/tr[11]/td[3]/text()")
    assert "turqoise" in texts

