# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestproduse2categorii():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testproduse2categorii(self):
    # Test name: test produse 2 categorii
    # Step # | name | target | value
    # 1 | open | /ro/ | 
    self.driver.get("http://34.118.122.203/ro/")
    # 2 | setWindowSize | 1900x1020 | 
    self.driver.set_window_size(1900, 1020)
    # 3 | click | css=a > .hidden-sm-down | 
    self.driver.find_element(By.CSS_SELECTOR, "a > .hidden-sm-down").click()
    # 4 | click | id=field-email | 
    self.driver.find_element(By.ID, "field-email").click()
    # 5 | type | id=field-email | maricaandrei60@gmail.com
    self.driver.find_element(By.ID, "field-email").send_keys("maricaandrei60@gmail.com")
    # 6 | type | id=field-password | octopussy581A
    self.driver.find_element(By.ID, "field-password").send_keys("octopussy581A")
    # 7 | click | id=submit-login | 
    self.driver.find_element(By.ID, "submit-login").click()
    # 8 | click | css=#category-4 > .dropdown-item |
    self.driver.implicitly_wait(3)
    self.driver.find_element(By.CSS_SELECTOR, "#category-3 > .dropdown-item").click()
    # 9 | click | css=.js-product:nth-child(2) img | 
    self.driver.find_element(By.CSS_SELECTOR, ".js-product:nth-child(2) img").click()
    # 10 | click | css=.add-to-cart |
    self.driver.implicitly_wait(3)
    self.driver.find_element(By.CSS_SELECTOR, ".add-to-cart").click()
    # 11 | click | css=.cart-content-btn > .btn-secondary | 
    self.driver.find_element(By.CSS_SELECTOR, ".cart-content-btn > .btn-secondary").click()
    # 12 | click | css=#category-5 > .dropdown-item | 
    self.driver.find_element(By.CSS_SELECTOR, "#category-3 > .dropdown-item").click()
    # 13 | click | css=.js-product:nth-child(2) img |
    self.driver.find_element(By.CSS_SELECTOR, ".js-product:nth-child(1) img").click()
    # 14 | click | css=.add-to-cart |
    self.driver.find_element(By.CSS_SELECTOR, ".add-to-cart").click()
    # 15 | click | css=.cart-content-btn > .btn-primary |
    self.driver.find_element(By.CSS_SELECTOR, ".cart-content-btn > .btn-primary").click()
    cos = self.driver.find_element(By.CLASS_NAME, "cart-items")
    produse = self.driver.find_elements(By.CLASS_NAME, "cart-item")
    if len(produse) > 0:
      print("Produsele sunt in cos")
    else:
      print("Test nereusit")
    # # 16 | click | css=.text-sm-center > .btn |
    # self.driver.find_element(By.CSS_SELECTOR, ".text-sm-center > .btn").click()
    # # 17 | click | name=confirm-addresses |
    # self.driver.find_element(By.NAME, "confirm-addresses").click()
    # # 18 | click | name=confirmDeliveryOption |
    # self.driver.find_element(By.NAME, "confirmDeliveryOption").click()
    # # 19 | click | id=conditions_to_approve[terms-and-conditions] |
    # self.driver.find_element(By.ID, "conditions_to_approve[terms-and-conditions]").click()
    # # 20 | click | css=.ps-shown-by-js > .btn |
    # self.driver.find_element(By.CSS_SELECTOR, ".ps-shown-by-js > .btn").click()

